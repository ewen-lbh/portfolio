package components

import "github.com/ewen-lbh/portfolio/shared"

css simpleLink() {
	align-items: center;
	display: inline-flex;
	text-decoration: none;
	transition: font-weight 0.125s ease-in-out;
	text-underline-offset: .5ch;
	text-decoration: underline 0.125em;
}

css iconedLink() {
	margin-top: 0.5em;
}

css iconedLinkIcon() {
	height: 1.3em;
}

css iconedLinkText() {
	margin-left: 0.5em;
}

func optionalStyles(styles ...templ.CSSClass) templ.CSSClass {
	if len(styles) == 0 {
		return templ.ConstantCSSClass("")
	}
	return styles[0]
}

templ SimpleLink(href string, styles ...templ.CSSClass) {
	@shared.OnHover(
		simpleLink(), 
        shared.Declarations{ 
			"font-weight": "bold",
        },
	)
	<a class={ simpleLink(), iconedLink(), optionalStyles(styles...) } href={ templ.SafeURL(href) }>
		{ children... }
	</a>
}

templ ArrowLink(href string, styles ...templ.CSSClass) {
	@shared.OnHover(
		simpleLink(), 
        shared.Declarations{ 
			"font-weight": "bold",
        },
	)
	<a class={ simpleLink(), iconedLink(), optionalStyles(styles...) } href={ templ.SafeURL(href) }>
		<svg class={ iconedLinkIcon() } width="66" height="33" viewBox="0 0 66 33" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path d="M17.9625 2L3 16.5M3 16.5L17.9625 31M3 16.5H66" stroke="currentColor" stroke-width="3" transform="rotate(180 33 16.5)"></path>
		</svg>
		{ children... }
	</a>
}

templ GoBackLink(href string, style ...templ.CSSClass) {
	@shared.OnHover(
        iconedLink(), 
        shared.Declarations{ 
            "text-decoration": "underline 0.125em",
        },
	)
	<a class={ simpleLink(), iconedLink(), optionalStyles(style...) } href={ templ.SafeURL(href) }>
		<svg class={ iconedLinkIcon() } width="66" height="33" viewBox="0 0 66 33" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path d="M17.9625 2L3 16.5M3 16.5L17.9625 31M3 16.5H66" stroke="currentColor" stroke-width="3"></path>
		</svg>
		{ children... }
	</a>
}

css searchBar() {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	column-gap: 0.5em;
	padding: 0.25em 0.5em;
	border: 2px solid var(--primary, black);
}

css searchBarInput() {
	border: none;
	background-color: transparent;
	font-family: Manrope;
}

script queryFromUrl(inputClass string) {
	document.addEventListener("DOMContentLoaded", () => {
		var q = new URLSearchParams(window.location.search).get("q")
		if (q) {
			document.querySelector("." + inputClass).value = q
			document.search(q)
		}
	})
}

templ SearchBar(placeholder string, onInput func(string) templ.ComponentScript) {
	<label class={ searchBar() }>
		@shared.OnHover(searchBar(), shared.Declarations{
			"background-color": "lightgray",
		})
		<img src={ shared.Asset("icons/magnifying_glass.svg") }/>
		@queryFromUrl(searchBarInput().ClassName())
		<input i18n-attrs name="q" oninput={ onInput(searchBarInput().ClassName()) } type="text" class={ searchBarInput() } i18n:placeholder="Search"/>
	</label>
}
